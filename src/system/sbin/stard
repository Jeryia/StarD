#!%BASH%


#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
#1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#
#2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
#
#3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# StarMadeâ„¢ is a registered trademark of Schine GmbH (All Rights Reserved)*
# The makers of stard make no claim of ownership or relationship with the owners of StarMade

#### stard
# script sets up the stard environment and runs stard-launcher as the starmade user.
# This script should be run as root. 

# Get deamon settings
source %SYSCONFDIR%/stard

## Global variable setup
# location of the starmade serverr directory
serverLoc="$SERVER_DIR"
# location to back starmade up to if need be
serverBackup="$BACKUP_DIR"
# location of the file stating what the last 
# version of starmade run was (only used when 
# HYBRODIZE is enabled.
last_version_file="$serverLoc/.lastver"

# on_die
# if this script is killed, gracefully stop stard
function on_die() {
	trap "exit 0" SIGINT
	trap "exit 0" SIGTERM
	kill 0
	exit 0
}


if [ 'x' == "x$SERVER_DIR" ]; then
	echo "SERVER_DIR undefined. exiting"
	exit 1
fi

if [ 'x' == "x$baseDir" ]; then
	echo "baseDir undefined. exiting"
	exit 1
fi

if [ ! -d $baseDir ]; then
	mkdir -p $baseDir
fi



## create the starmade server dir if it doesn't exist.
# Also if there is a backup available, pull it.
if [ ! -d $serverLoc ]; then
	if [ -d $serverBackup ]; then
		mv $serverBackup $serverLoc
	else
		mkdir $serverLoc;
	fi
fi

## Make sure perms are good
chown $USER:$GROUP $baseDir
chmod u+w $baseDir
chmod u+r $baseDir
chmod u+x $baseDir
chmod u+r $serverLoc
chmod u+w $serverLoc
chmod u+x $serverLoc

# make sure ownership is good
chown $USER:$GROUP $serverLoc
chown -R $USER:$GROUP $baseDir/stard/plugins
chown -R $USER:$GROUP $baseDir/stard/plugins.disabled
chown -R $USER:$GROUP $serverLoc/*





## hybridize stuff
if [ $HYBRIDIZE -eq 1 ]; then
	CURVER=`cat $baseDir/version.txt`
	LASTVER=`cat $last_version_file`

	if [ "x$CURVER" != "x$LASTVER" ]; then
		%SBINDIR%/stard-backup
		rm -rf $starmade_appData/customBlockConfig/ 
		rm -rf $starmade_appData/customBlockTextures 
		rm -rf $starmade_appData/customFactionConfig
	fi

	echo $CURVER > $last_version_file
	/usr/bin/hybridize -g $baseDir/greylist --purge $baseDir/base/ $serverLoc $baseDir/whitelist $baseDir/base || exit 1
fi





## Actual program launch
trap "on_die" SIGINT
trap "on_die" SIGTERM
nice -n -20 su $USER -c "$baseDir/stard/bin/stard-launcher > $baseDir/stard/log/stard-launcher.out 2>&1"

## if the AUTO_RESTART is set, start the server back up as it died.
if [ $AUTO_RESTART -eq 1 ]; then
	while [ 1 -eq 1 ]; do
		sleep 2
		nice -n -20 su $USER -c "$baseDir/stard/bin/stard-launcher > $baseDir/stard/log/stard-launcher.out 2>&1"
	done
fi
