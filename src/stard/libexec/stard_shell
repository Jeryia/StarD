#!%PERL%
use strict;
use warnings;
use Cwd;

use lib("./lib/perl");
use Stard::Base;
use Starmade::Base;



# Name: stard_shell
# Description: launches a shell for running commands against the 
# starmade server.


# determine where the stard home is
# using our called path.
my $stard_home= getcwd();


# load stard_lib.
stard_setup_lib_env($stard_home);
starmade_setup_lib_env($stard_home);
$| = 1;


&main();
sub main {
	my $input = '';
	print starmade_cmd("/status");
	print "########################################################\n";
	print "Welcome to the stard shell!\n";
	print "This offers a general shell interface to the starmade server\n";
	print "You can run any normal starmade command in this shell\n";
	print "You can quit this shell at any time with the quit command or by using ctrl-C\n";
	print "########################################################\n";
	print "stard\$ ";
	$input = <STDIN>;
	while ( $input ne "quit\n" ) {
		my @args = split(" ", $input);
		my $cmd = shift(@args);
		if ($cmd =~/^\//) {
			print starmade_cmd($cmd, @args);
		}
		elsif ($cmd =~s/^!//) {
			print plugin_command($cmd, @args);
		}
		elsif($cmd=~/\S/ && !($cmd eq 'quit')) {
			print "Invalid command.\n";
			print "to run a starmade command use /<command>\n";
			print "to run a stard command use !<command>\n";
			exit 1;
		};

		print "stard\$ ";
		$input = <STDIN>;
	}
	print "Exiting stard shell...\n";
		
};
