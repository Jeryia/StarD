#!perl
use strict;
use warnings;

use lib("../../lib/perl");
use Starmade::Base;
use Starmade::Regression;


my $stard_home = "../../";
starmade_setup_lib_env($stard_home);
starmade_stdlib_set_debug(1);

main(@ARGV);

sub main {
	my $player = $_[0];

	my $plugin = "LastLogin";

	prep_test_category("Plugin: $plugin", 4, 1);

	# setup environment (this is a bit of a cludge)
	my $lastlogin_player = "asdf";
	my $lastlogin_player_data = "./data/$lastlogin_player";


	# Check if a player logs in that it is logged.
	unlink($lastlogin_player_data);
	test_event("playerLogin", $lastlogin_player);
	test_result("plugin-$plugin - playerLogin", -e $lastlogin_player_data);


	# Check if a player logs out that it is logged.
	unlink($lastlogin_player_data);
	test_event("playerLogout", $lastlogin_player);
	test_result("plugin-$plugin - playerLogout", -e $lastlogin_player_data);
	unlink($lastlogin_player_data);


	# Check that the lastlogin command returns ok when looking up the player
	test_result(
		"plugin-$plugin - !lastlogin online player",
		test_command("lastlogin", $player, $player) == 0
	);

	# Check that the lastlogin command returns ok when looking a non existant player
	test_result(
		"plugin-$plugin - !lastlogin non-existant player",
		test_command("lastlogin", $player, "kfhrb") == 0
	);
	
	finalize_testing();
}
